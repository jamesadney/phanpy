{"version":3,"file":"main-fOuWUTN2.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.js","../../src/utils/useLocationChange.js","../../src/utils/lists.js","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../node_modules/chroma-js/src/utils/limit.js","../../node_modules/chroma-js/src/utils/type.js","../../node_modules/chroma-js/src/utils/unpack.js","../../node_modules/chroma-js/src/utils/index.js","../../node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../src/components/media-modal.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.js","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/annual-report.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.js","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/utils/oauth-pkce.js","../../src/utils/auth.js","../../src/pages/login.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  const visibleTimeout = useRef();\n  usePageVisibility((visible) => {\n    clearTimeout(visibleTimeout.current);\n    if (visible) {\n      setVisible(true);\n    } else {\n      visibleTimeout.current = setTimeout(() => {\n        setVisible(false);\n      }, POLL_INTERVAL);\n    }\n  });\n\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications.list({\n        limit: 1,\n        sinceId: states.notificationsLast.id,\n      });\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys('shift+alt+k', () => {\n    const currentCloakMode = states.settings.cloakMode;\n    states.settings.cloakMode = !currentCloakMode;\n    showToast({\n      text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n    });\n  });\n\n  return null;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport states from '../utils/states';\n\nimport Icon from './icon';\n\nexport default function ComposeButton() {\n  const snapStates = useSnapshot(states);\n\n  function handleButton(e) {\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    if (e.shiftKey) {\n      const newWin = openCompose();\n\n      if (!newWin) {\n        states.showCompose = true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal;\n    },\n  });\n\n  return (\n    <button\n      type=\"button\"\n      id=\"compose-button\"\n      onClick={handleButton}\n      class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n        snapStates.composerState.publishing ? 'loading' : ''\n      } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n    >\n      <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n    </button>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?, shift+?, shift+slash',\n    (e) => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus next column in multi-column mode`,\n                    keys: <kbd>]</kbd>,\n                  },\n                  {\n                    action: t`Focus previous column in multi-column mode`,\n                    keys: <kbd>[</kbd>,\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, setCurrentAccountID } from '../utils/store-utils';\n\nconst isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n\nfunction Accounts({ onClose }) {\n  const { masto } = api();\n  // Accounts\n  const accounts = store.local.getJSON('accounts');\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isCurrent}\n                            onClick={() => {\n                              setCurrentAccountID(account.info.id);\n                              location.reload();\n                            }}\n                          >\n                            <Icon icon=\"transfer\" />{' '}\n                            <Trans>Switch to this account</Trans>\n                          </MenuItem>\n                          {!isStandalone && !isCurrent && (\n                            <MenuLink\n                              href={`./?account=${account.info.id}`}\n                              target=\"_blank\"\n                            >\n                              <Icon icon=\"external\" />\n                              <span>\n                                <Trans>Switch in new tab/window</Trans>\n                              </span>\n                            </MenuLink>\n                          )}\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <MenuItem\n                          disabled={isDefault}\n                          onClick={() => {\n                            // Move account to the top of the list\n                            accounts.splice(i, 1);\n                            accounts.unshift(account);\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          }}\n                        >\n                          <Icon icon=\"check-circle\" />\n                          <span>\n                            <Trans>Set as default</Trans>\n                          </span>\n                        </MenuItem>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={() => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          accounts.splice(i, 1);\n                          store.local.setJSON('accounts', accounts);\n                          // location.reload();\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport store from '../utils/store';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n  'pt-BR': 'pt-BR',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          store.local.set('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getVapidKey } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const vapidKey = getVapidKey();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const vapidKey = getVapidKey();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const vapidKey = getVapidKey();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport targetLanguages from '../data/lingva-target-languages';\nimport { api } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport prettyBytes from '../utils/pretty-bytes';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport supports from '../utils/supports';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nfunction Settings({ onClose }) {\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(store.account.get('preferences') || {});\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <div\n      id=\"settings-container\"\n      class=\"sheet\"\n      tabIndex=\"-1\"\n      style={{\n        '--current-text-size': `${currentTextSize}px`,\n      }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'dark light' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <span>\n                <label>\n                  <Trans>Display language</Trans>\n                </label>\n                <br />\n                <small>\n                  <a\n                    href=\"https://crowdin.com/project/phanpy\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Trans>Volunteer translations</Trans>\n                  </a>\n                </small>\n              </span>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            setPrefs({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                            store.account.set('preferences', {\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Unlisted</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers only</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.contentTranslation}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n                    states.settings.contentTranslation = checked;\n                    if (!checked) {\n                      states.settings.contentTranslationTargetLanguage = null;\n                    }\n                  }}\n                />{' '}\n                <Trans>Post translation</Trans>\n              </label>\n              <div\n                class={`sub-section ${\n                  !snapStates.settings.contentTranslation\n                    ? 'more-insignificant'\n                    : ''\n                }`}\n              >\n                <div>\n                  <label>\n                    <Trans>Translate to </Trans>{' '}\n                    <select\n                      value={targetLanguage || ''}\n                      disabled={!snapStates.settings.contentTranslation}\n                      style={{ width: '10em' }}\n                      onChange={(e) => {\n                        states.settings.contentTranslationTargetLanguage =\n                          e.target.value || null;\n                      }}\n                    >\n                      <option value=\"\">\n                        <Trans>\n                          System language ({systemTargetLanguageText})\n                        </Trans>\n                      </option>\n                      <option disabled>──────────</option>\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = common !== native;\n                        return (\n                          <option value={lang.code}>\n                            {showCommon ? `${native} - ${common}` : common}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </label>\n                </div>\n                <hr />\n                <div class=\"checkbox-fieldset\">\n                  <Plural\n                    value={\n                      snapStates.settings.contentTranslationHideLanguages.length\n                    }\n                    _0={`Hide \"Translate\" button for:`}\n                    other={`Hide \"Translate\" button for (#):`}\n                  />\n                  <div class=\"checkbox-fields\">\n                    {targetLanguages.map((lang) => {\n                      const common = localeCode2Text({\n                        code: lang.code,\n                        fallback: lang.name,\n                      });\n                      const native = localeCode2Text({\n                        code: lang.code,\n                        locale: lang.code,\n                      });\n                      const showCommon = common !== native;\n                      return (\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                              lang.code,\n                            )}\n                            onChange={(e) => {\n                              const { checked } = e.target;\n                              if (checked) {\n                                states.settings.contentTranslationHideLanguages.push(\n                                  lang.code,\n                                );\n                              } else {\n                                states.settings.contentTranslationHideLanguages =\n                                  snapStates.settings.contentTranslationHideLanguages.filter(\n                                    (code) => code !== lang.code,\n                                  );\n                              }\n                            }}\n                          />{' '}\n                          {showCommon ? (\n                            <span>\n                              {native}{' '}\n                              <span class=\"insignificant\">- {common}</span>\n                            </span>\n                          ) : (\n                            common\n                          )}\n                        </label>\n                      );\n                    })}\n                  </div>\n                </div>\n                <p class=\"insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external translation services,\n                      powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/lingva-api\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Lingva API\n                      </a>{' '}\n                      &amp;{' '}\n                      <a\n                        href=\"https://github.com/thedaviddelta/lingva-translate\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Lingva Translate\n                      </a>\n                      .\n                    </Trans>\n                  </small>\n                </p>\n                <hr />\n                <div>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={snapStates.settings.contentTranslationAutoInline}\n                      disabled={!snapStates.settings.contentTranslation}\n                      onChange={(e) => {\n                        states.settings.contentTranslationAutoInline =\n                          e.target.checked;\n                      }}\n                    />{' '}\n                    <Trans>Auto inline translation</Trans>\n                  </label>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Automatically show translation for posts in timeline.\n                        Only works for <b>short</b> posts without content\n                        warning, media and poll.\n                      </Trans>\n                    </small>\n                  </p>\n                </div>\n              </div>\n            </li>\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && supports('@mastodon/grouped-notifications') && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.groupedNotificationsAlpha}\n                    onChange={(e) => {\n                      states.settings.groupedNotificationsAlpha =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Server-side grouped notifications</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Alpha-stage feature. Potentially improved grouping window\n                      but basic grouping logic.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://patreon.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Patreon\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href={PRIVACY_POLICY_URL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n        {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n          <details class=\"debug-info\">\n            <summary></summary>\n            <p>Debugging</p>\n            {__BENCH_RESULTS?.size > 0 && (\n              <ul>\n                {Array.from(__BENCH_RESULTS.entries()).map(\n                  ([name, duration]) => (\n                    <li>\n                      <b>{name}</b>: {duration}ms\n                    </li>\n                  ),\n                )}\n              </ul>\n            )}\n            <p>Service Worker Cache</p>\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesKeys())}\n            >\n              Show keys count\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesSize())}\n            >\n              Show cache size\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                const key = prompt('Enter cache key');\n                if (!key) return;\n                try {\n                  clearCacheKey(key);\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear cache key\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                try {\n                  clearCaches();\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear all caches\n            </button>\n          </details>\n        )}\n      </main>\n    </div>\n  );\n}\n\nasync function getCachesKeys() {\n  const keys = await caches.keys();\n  const total = {};\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    total[key] = k.length;\n  }\n  return total;\n}\n\nasync function getCachesSize() {\n  const keys = await caches.keys();\n  let total = {};\n  let TOTAL = 0;\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    for (const item of k) {\n      try {\n        const response = await cache.match(item);\n        const blob = await response.blob();\n        total[key] = (total[key] || 0) + blob.size;\n        TOTAL += blob.size;\n      } catch (e) {\n        alert('Failed to get cache size for ' + item);\n        alert(e);\n      }\n    }\n  }\n  return {\n    ...Object.fromEntries(\n      Object.entries(total).map(([k, v]) => [k, prettyBytes(v)]),\n    ),\n    TOTAL: prettyBytes(TOTAL),\n  };\n}\n\nfunction clearCacheKey(key) {\n  return caches.delete(key);\n}\n\nasync function clearCaches() {\n  const keys = await caches.keys();\n  for (const key of keys) {\n    await caches.delete(key);\n  }\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.keys(alerts).forEach((alert) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = true;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus focused column\n      const focusedColumn = columns.querySelector('.deck-container.focus');\n      if (focusedColumn) {\n        focusedColumn.focus();\n      } else {\n        // Focus first column within viewport\n        const firstVisibleColumn = columns\n          .querySelectorAll('.deck-container')\n          .find((column) => {\n            const columnRect = column.getBoundingClientRect();\n            return columnRect.left >= 0;\n          });\n        if (firstVisibleColumn) {\n          firstVisibleColumn.focus();\n        } else {\n          // Focus first column\n          columns.querySelector('.deck-container')?.focus?.();\n        }\n      }\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive =\n    supports('@mastodon/list-exclusive') ||\n    supports('@gotosocial/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { msg, plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getLists } from '../utils/lists';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states, { hideAllModals } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, updateAccount } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport SubMenu2 from './submenu2';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  60 * 60 * 24 * 30, // 30 days\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n  2592_000: i18nDuration(30, 'day'),\n};\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n}) {\n  const { i18n } = useLingui();\n  const { masto } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = store.local.getJSON('accounts');\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        store.local.setJSON('accounts', accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const domain = punycode.toUnicode(URL.parse(url).hostname);\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts.$select(id).followers.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts.$select(id).following.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n      style={{\n        '--header-color-1': headerCornerColors[0],\n        '--header-color-2': headerCornerColors[1],\n        '--header-color-3': headerCornerColors[2],\n        '--header-color-4': headerCornerColors[3],\n      }}\n    >\n      {uiState === 'error' && (\n        <div class=\"ui-state\">\n          <p>\n            <Trans>Unable to load account.</Trans>\n          </p>\n          <p>\n            <a\n              href={isString ? account : url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n            </a>\n          </p>\n        </div>\n      )}\n      {uiState === 'loading' ? (\n        <>\n          <header>\n            <AccountBlock avatarSize=\"xxxl\" skeleton />\n          </header>\n          <main>\n            <div class=\"note\">\n              <p>███████ ████ ████</p>\n              <p>████ ████████ ██████ █████████ ████ ██</p>\n            </div>\n            <div class=\"account-metadata-box\">\n              <div class=\"profile-metadata\">\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">███</b>\n                  <p>██████</p>\n                </div>\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">████</b>\n                  <p>███████████</p>\n                </div>\n              </div>\n              <div class=\"stats\">\n                <div>\n                  <span>██</span> <Trans>Followers</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans id=\"following.stats\">Following</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans>Posts</Trans>\n                </div>\n              </div>\n            </div>\n            <div class=\"actions\">\n              <span />\n              <span class=\"buttons\">\n                <button type=\"button\" class=\"plain\" disabled>\n                  <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                </button>\n              </span>\n            </div>\n          </main>\n        </>\n      ) : (\n        info && (\n          <>\n            {!!moved && (\n              <div class=\"account-moved\">\n                <p>\n                  <Trans>\n                    <b>{displayName}</b> has indicated that their new account is\n                    now:\n                  </Trans>\n                </p>\n                <AccountBlock\n                  account={moved}\n                  instance={instance}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    states.showAccount = moved;\n                  }}\n                />\n              </div>\n            )}\n            {!!header && !/missing\\.png$/.test(header) && (\n              <img\n                src={header}\n                alt=\"\"\n                class={`header-banner ${\n                  headerIsAvatar ? 'header-is-avatar' : ''\n                }`}\n                onError={(e) => {\n                  if (e.target.crossOrigin) {\n                    if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.removeAttribute('crossorigin');\n                      e.target.src = header;\n                    }\n                  } else if (e.target.src !== headerStatic) {\n                    e.target.src = headerStatic;\n                  } else {\n                    e.target.remove();\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onLoad={(e) => {\n                  e.target.classList.add('loaded');\n                  try {\n                    // Get color from four corners of image\n                    const canvas = window.OffscreenCanvas\n                      ? new OffscreenCanvas(1, 1)\n                      : document.createElement('canvas');\n                    const ctx = canvas.getContext('2d', {\n                      willReadFrequently: true,\n                    });\n                    canvas.width = e.target.width;\n                    canvas.height = e.target.height;\n                    ctx.imageSmoothingEnabled = false;\n                    ctx.drawImage(e.target, 0, 0);\n                    // const colors = [\n                    //   ctx.getImageData(0, 0, 1, 1).data,\n                    //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                    //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                    //   ctx.getImageData(\n                    //     e.target.width - 1,\n                    //     e.target.height - 1,\n                    //     1,\n                    //     1,\n                    //   ).data,\n                    // ];\n                    // Get 10x10 pixels from corners, get average color from each\n                    const pixelDimension = 10;\n                    const colors = [\n                      ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                        .data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        0,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        0,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                    ].map((data) => {\n                      let r = 0;\n                      let g = 0;\n                      let b = 0;\n                      let a = 0;\n                      for (let i = 0; i < data.length; i += 4) {\n                        r += data[i];\n                        g += data[i + 1];\n                        b += data[i + 2];\n                        a += data[i + 3];\n                      }\n                      const dataLength = data.length / 4;\n                      return [\n                        r / dataLength,\n                        g / dataLength,\n                        b / dataLength,\n                        a / dataLength,\n                      ];\n                    });\n                    const rgbColors = colors.map((color) => {\n                      const [r, g, b, a] = lightenRGB(color);\n                      return `rgba(${r}, ${g}, ${b}, ${a})`;\n                    });\n                    setHeaderCornerColors(rgbColors);\n                    console.log({ colors, rgbColors });\n                  } catch (e) {\n                    // Silently fail\n                  }\n                }}\n              />\n            )}\n            <header>\n              {standalone ? (\n                <Menu2\n                  shift={\n                    window.matchMedia('(min-width: calc(40em))').matches\n                      ? 114\n                      : 64\n                  }\n                  menuButton={\n                    <div>\n                      <AccountBlock\n                        account={info}\n                        instance={instance}\n                        avatarSize=\"xxxl\"\n                        onClick={() => {}}\n                      />\n                    </div>\n                  }\n                >\n                  <div class=\"szh-menu__header\">\n                    <AccountHandleInfo acct={acct} instance={instance} />\n                  </div>\n                  <MenuItem\n                    onClick={() => {\n                      const handleWithInstance = acct.includes('@')\n                        ? `@${acct}`\n                        : `@${acct}@${instance}`;\n                      try {\n                        navigator.clipboard.writeText(handleWithInstance);\n                        showToast(t`Handle copied`);\n                      } catch (e) {\n                        console.error(e);\n                        showToast(t`Unable to copy handle`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"link\" />\n                    <span>\n                      <Trans>Copy handle</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuItem href={url} target=\"_blank\">\n                    <Icon icon=\"external\" />\n                    <span>\n                      <Trans>Go to original profile page</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuDivider />\n                  <MenuLink href={info.avatar} target=\"_blank\">\n                    <Icon icon=\"user\" />\n                    <span>\n                      <Trans>View profile image</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuLink href={info.header} target=\"_blank\">\n                    <Icon icon=\"media\" />\n                    <span>\n                      <Trans>View profile header</Trans>\n                    </span>\n                  </MenuLink>\n                </Menu2>\n              ) : (\n                <AccountBlock\n                  account={info}\n                  instance={instance}\n                  avatarSize=\"xxxl\"\n                  internal\n                />\n              )}\n            </header>\n            <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n            <main>\n              {!!memorial && (\n                <span class=\"tag\">\n                  <Trans>In Memoriam</Trans>\n                </span>\n              )}\n              {!!bot && (\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                </span>\n              )}\n              {!!group && (\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> <Trans>Group</Trans>\n                </span>\n              )}\n              {roles?.map((role) => (\n                <span class=\"tag\">\n                  {role.name}\n                  {!!accountInstance && (\n                    <>\n                      {' '}\n                      <span class=\"more-insignificant\">{accountInstance}</span>\n                    </>\n                  )}\n                </span>\n              ))}\n              <div\n                class=\"note\"\n                dir=\"auto\"\n                onClick={handleContentLinks({\n                  instance: currentInstance,\n                })}\n                dangerouslySetInnerHTML={{\n                  __html: enhanceContent(note, { emojis }),\n                }}\n              />\n              <div class=\"account-metadata-box\">\n                {fields?.length > 0 && (\n                  <div class=\"profile-metadata\">\n                    {fields.map(({ name, value, verifiedAt }, i) => (\n                      <div\n                        class={`profile-field ${\n                          verifiedAt ? 'profile-verified' : ''\n                        }`}\n                        key={name + i}\n                        dir=\"auto\"\n                      >\n                        <b>\n                          <EmojiText text={name} emojis={emojis} />{' '}\n                          {!!verifiedAt && (\n                            <Icon\n                              icon=\"check-circle\"\n                              size=\"s\"\n                              alt={t`Verified`}\n                            />\n                          )}\n                        </b>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: enhanceContent(value, { emojis }),\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div class=\"stats\">\n                  <LinkOrDiv\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          id: 'followers',\n                          heading: t`Followers`,\n                          fetchAccounts: fetchFollowers,\n                          instance,\n                          excludeRelationshipAttrs: isSelf\n                            ? ['followedBy']\n                            : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    {!!familiarFollowers.length && (\n                      <span class=\"shazam-container-horizontal\">\n                        <span class=\"shazam-container-inner stats-avatars-bunch\">\n                          {familiarFollowers.map((follower) => (\n                            <Avatar\n                              url={follower.avatarStatic}\n                              size=\"s\"\n                              alt={`${follower.displayName} @${follower.acct}`}\n                              squircle={follower?.bot}\n                            />\n                          ))}\n                        </span>\n                      </span>\n                    )}\n                    <span title={followersCount}>\n                      {shortenNumber(followersCount)}\n                    </span>{' '}\n                    <Trans>Followers</Trans>\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          heading: t({\n                            id: 'following.stats',\n                            message: 'Following',\n                          }),\n                          fetchAccounts: fetchFollowing,\n                          instance,\n                          excludeRelationshipAttrs: isSelf ? ['following'] : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    <span title={followingCount}>\n                      {shortenNumber(followingCount)}\n                    </span>{' '}\n                    <Trans id=\"following.stats\">Following</Trans>\n                    <br />\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    to={accountLink}\n                    // onClick={\n                    //   standalone\n                    //     ? undefined\n                    //     : () => {\n                    //         hideAllModals();\n                    //       }\n                    // }\n                  >\n                    <span title={statusesCount}>\n                      {shortenNumber(statusesCount)}\n                    </span>{' '}\n                    <Trans>Posts</Trans>\n                  </LinkOrDiv>\n                  {!!createdAt && (\n                    <div class=\"insignificant\">\n                      <Trans>\n                        Joined{' '}\n                        <time datetime={createdAt}>\n                          {niceDateTime(createdAt, {\n                            hideTime: true,\n                          })}\n                        </time>\n                      </Trans>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {!!postingStats && (\n                <LinkOrDiv\n                  to={accountLink}\n                  class=\"account-metadata-box\"\n                  // onClick={() => {\n                  //   states.showAccount = false;\n                  // }}\n                >\n                  <div class=\"shazam-container\">\n                    <div class=\"shazam-container-inner\">\n                      {hasPostingStats ? (\n                        <div\n                          class=\"posting-stats\"\n                          title={t`${(\n                            postingStats.originals / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} original posts, ${(\n                            postingStats.replies / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} replies, ${(\n                            postingStats.boosts / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} boosts`}\n                        >\n                          <div>\n                            {postingStats.daysSinceLastPost < 365\n                              ? plural(postingStats.total, {\n                                  one: plural(postingStats.daysSinceLastPost, {\n                                    one: `Last 1 post in the past 1 day`,\n                                    other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                  }),\n                                  other: plural(\n                                    postingStats.daysSinceLastPost,\n                                    {\n                                      one: `Last ${postingStats.total} posts in the past 1 day`,\n                                      other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                    },\n                                  ),\n                                })\n                              : plural(postingStats.total, {\n                                  one: 'Last 1 post in the past year(s)',\n                                  other: `Last ${postingStats.total} posts in the past year(s)`,\n                                })}\n                          </div>\n                          <div\n                            class=\"posting-stats-bar\"\n                            style={{\n                              // [originals | replies | boosts]\n                              '--originals-percentage': `${\n                                (postingStats.originals / postingStats.total) *\n                                100\n                              }%`,\n                              '--replies-percentage': `${\n                                ((postingStats.originals +\n                                  postingStats.replies) /\n                                  postingStats.total) *\n                                100\n                              }%`,\n                            }}\n                          />\n                          <div class=\"posting-stats-legends\">\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                              <Trans>Original</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                              <Trans>Replies</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                              <Trans>Boosts</Trans>\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div class=\"posting-stats\">\n                          <Trans>Post stats unavailable.</Trans>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </LinkOrDiv>\n              )}\n              {!moved && (\n                <div class=\"account-metadata-box\">\n                  <div\n                    class=\"shazam-container no-animation\"\n                    hidden={!!postingStats}\n                  >\n                    <div class=\"shazam-container-inner\">\n                      <button\n                        type=\"button\"\n                        class=\"posting-stats-button\"\n                        disabled={postingStatsUIState === 'loading'}\n                        onClick={() => {\n                          renderPostingStats();\n                        }}\n                      >\n                        <div\n                          class={`posting-stats-bar posting-stats-icon ${\n                            postingStatsUIState === 'loading' ? 'loading' : ''\n                          }`}\n                          style={{\n                            '--originals-percentage': '33%',\n                            '--replies-percentage': '66%',\n                          }}\n                        />\n                        <Trans>View post stats</Trans>{' '}\n                        {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </main>\n            <footer>\n              <RelatedActions\n                info={info}\n                instance={instance}\n                standalone={standalone}\n                authenticated={authenticated}\n                onRelationshipChange={onRelationshipChange}\n                onProfileUpdate={onProfileUpdate}\n              />\n            </footer>\n          </>\n        )\n      )}\n    </div>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  onProfileUpdate = () => {},\n}) {\n  if (!info) return null;\n  const { _ } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.fetch({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf && (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  itemProps={{\n                    className: 'danger',\n                  }}\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) setRelationship(newRelationship);\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <p>\n              <label>\n                <Trans>Name</Trans>{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  const encodedAcct = punycode.toASCII(acct);\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\" title={encodedAcct}>\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { t } from '@lingui/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.fetch({\n                q: account,\n                type: 'accounts',\n                limit: 1,\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                return result.accounts[0];\n              } else if (/https?:\\/\\/[^/]+\\/@/.test(account)) {\n                const accountURL = URL.parse(account);\n                const { hostname, pathname } = accountURL;\n                const acct =\n                  pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                  '@' +\n                  hostname;\n                const result = await masto.v2.search.fetch({\n                  q: acct,\n                  type: 'accounts',\n                  limit: 1,\n                  resolve: authenticated,\n                });\n                if (result.accounts.length) {\n                  return result.accounts[0];\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) =>\n                new Date(b.updatedAt).getTime() -\n                new Date(a.updatedAt).getTime(),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        if (replyTo) {\n                          setUIState('loading');\n                          try {\n                            replyToStatus = await masto.v1.statuses\n                              .$select(replyTo.id)\n                              .fetch();\n                          } catch (e) {\n                            console.error(e);\n                            alert(t`Error fetching reply-to status!`);\n                            setUIState('default');\n                            return;\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { draftStatus, replyTo } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasPollOrMedia = hasPoll || hasMedia;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { t, Trans } from '@lingui/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"button plain\"\n          >\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy = t`Nothing to show`,\n}) {\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (staticAccounts?.length > 0) {\n      setAccounts(staticAccounts);\n      loadRelationships(staticAccounts);\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [staticAccounts, fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">{blankCopy}</p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { t, Trans } from '@lingui/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { t, Trans } from '@lingui/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklch2rgb, rgb2oklch } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = () => {\n      onClose();\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, []);\n\n  useHotkeys(\n    'esc',\n    onClose,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaOkColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        return rgb2oklch(averageColor);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentColors = useMemo(() => {\n    return mediaOkColors?.map((okColor) => {\n      if (okColor) {\n        return {\n          light: oklch2rgb([0.95, 0.01, okColor[2]]),\n          dark: oklch2rgb([0.35, 0.01, okColor[2]]),\n          default: oklch2rgb([0.6, okColor[1], okColor[2]]),\n        };\n      }\n      return null;\n    });\n  });\n  const mediaAccentGradients = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    const colors = mediaAccentColors.map((color, i) => {\n      const start = i * range + gap;\n      const end = (i + 1) * range - gap;\n      if (color?.light && color?.dark) {\n        return {\n          light: `\n                rgb(${color.light?.join(',')}) ${start}%, \n                rgb(${color.light?.join(',')}) ${end}%\n              `,\n          dark: `\n                rgb(${color.dark?.join(',')}) ${start}%, \n                rgb(${color.dark?.join(',')}) ${end}%\n              `,\n        };\n      }\n\n      return {\n        light: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n        dark: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n      };\n    });\n    const lightGradient = colors.map((color) => color.light).join(', ');\n    const darkGradient = colors.map((color) => color.dark).join(', ');\n    return {\n      light: lightGradient,\n      dark: darkGradient,\n    };\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const currentColor = mediaAccentColors[currentIndex];\n    let $meta;\n    let metaColor;\n    if (currentColor) {\n      const theme = store.local.get('theme');\n      if (theme) {\n        const mediaColor = `rgb(${currentColor[theme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      } else {\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        const mediaColor = `rgb(${currentColor[colorScheme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      }\n    }\n    return () => {\n      // Reset meta color\n      if ($meta && metaColor) {\n        $meta.content = metaColor;\n      }\n    };\n  }, [currentIndex, mediaAccentColors]);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose();\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                '--accent-gradient-light': mediaAccentGradients?.light,\n                '--accent-gradient-dark': mediaAccentGradients?.dark,\n                //     backgroundImage: `linear-gradient(\n                // to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor.default.join(',')})`,\n                      '--accent-light-color': `rgb(${accentColor.light?.join(\n                        ',',\n                      )})`,\n                      '--accent-dark-color': `rgb(${accentColor.dark?.join(\n                        ',',\n                      )})`,\n                      '--accent-alpha-color': `rgba(${accentColor.default.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={() => onClose()}\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.focus();\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          <Link\n            to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n              window.matchMedia('(min-width: calc(40em + 350px))').matches\n                ? `?media=${currentIndex + 1}`\n                : ''\n            }`}\n            class=\"button carousel-button media-post-link\"\n            // onClick={() => {\n            //   // if small screen (not media query min-width 40em + 350px), run onClose\n            //   if (\n            //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n            //   ) {\n            //     onClose();\n            //   }\n            // }}\n          >\n            <span class=\"button-label\">\n              <Trans>View post</Trans>{' '}\n            </span>\n            &raquo;\n          </Link>\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './report-modal.css';\n\nimport { msg, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [, /*'dislike'*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [rules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    return [rules || [], domain];\n  });\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !rules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!rules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {rules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags.list({\n    limit: LIMIT,\n  });\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) =>\n      index === 0\n        ? t`Home`\n        : t({ id: 'following.title', message: 'Following' }),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                showToast({\n                  text: {\n                    post: t`Post published. Check it out.`,\n                    reply: t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    navigate(\n                      instance\n                        ? `/${instance}/s/${newStatus.id}`\n                        : `/s/${newStatus.id}`,\n                    );\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.index}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, Plural, Select, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { api } from '../utils/api';\nimport { isFiltered } from '../utils/filters';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n  annual_report: 'celebrate',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: () => t`A post you interacted with has been edited.`,\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n  annual_report: ({ year }) => <Trans>Your {year} #Wrapstodon is here!</Trans>,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    annualReport,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    _groupKeys,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n    groupKey,\n  } = notification;\n  let { type } = notification;\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  if (typeof text === 'function') {\n    const count =\n      _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || (status ? 1 : 0);\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({\n        account: <NameText account={account} showAvatar />,\n        emoji: notification.emoji,\n        emojiURL,\n      });\n    } else if (type === 'annual_report') {\n      text = text({\n        ...notification.annualReport,\n      });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  const diffCount =\n    notificationsCount > 0 && notificationsCount > sampleAccounts?.length;\n  const expandAccounts = diffCount ? 'remote' : 'local';\n\n  // If there's a status and filter action is 'hide', then the notification is hidden\n  // TODO: Handle 'warn' action one day\n  if (!!status?.filtered) {\n    const isOwnPost = status?.account?.id === currentAccount;\n    const filterInfo = isFiltered(status.filtered, 'notifications');\n    if (!isSelf && !isOwnPost && filterInfo?.action === 'hide') {\n      return null;\n    }\n  }\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      data-group-key={_groupKeys?.join(' ') || groupKey}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {type !== 'mention' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n            {type === 'annual_report' && (\n              <div>\n                <Link to={`/annual_report/${annualReport?.year}`}>\n                  <Trans>View #Wrapstodon</Trans>\n                </Link>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener noreferrer\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                          ? 'xl'\n                          : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {type === 'favourite+reblog' && expandAccounts === 'remote' ? (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                data-group-keys={_groupKeys?.join(' ')}\n                onClick={() => {\n                  states.showGenericAccounts = {\n                    heading: genericAccountsHeading,\n                    fetchAccounts: async () => {\n                      const keyAccounts = await Promise.allSettled(\n                        _groupKeys.map(async (gKey) => {\n                          const iterator = masto.v2.notifications\n                            .$select(gKey)\n                            .accounts.list();\n                          return [gKey, (await iterator.next()).value];\n                        }),\n                      );\n                      const accounts = [];\n                      for (const keyAccount of keyAccounts) {\n                        const [key, _accounts] = keyAccount.value;\n                        const type = /^favourite/.test(key)\n                          ? 'favourite'\n                          : /^reblog/.test(key)\n                            ? 'reblog'\n                            : null;\n                        if (!type) continue;\n                        for (const account of _accounts) {\n                          const theAccount = accounts.find(\n                            (a) => a.id === account.id,\n                          );\n                          if (theAccount) {\n                            theAccount._types.push(type);\n                          } else {\n                            account._types = [type];\n                            accounts.push(account);\n                          }\n                        }\n                      }\n                      return {\n                        done: true,\n                        value: accounts,\n                      };\n                    },\n                    showReactions: true,\n                    postID: statusKey(actualStatusID, instance),\n                  };\n                }}\n              >\n                <Icon icon=\"chevron-down\" />\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                onClick={handleOpenGenericAccounts}\n              >\n                {_accounts.length > AVATARS_LIMIT &&\n                  `+${_accounts.length - AVATARS_LIMIT}`}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            )}\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener noreferrer\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <Trans>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <Trans>\n                  Posts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <Trans>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </Trans>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <Trans>\n                  Look up <mark>{query}</mark>\n                </Trans>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <Trans>\n                  Accounts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  console.log('onClick', e);\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return isSearchPage || hasModal;\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  const isMultiColumnMode =\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode);\n  if (isMultiColumnMode) {\n    return null;\n  }\n\n  const menuRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else {\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else {\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  const navigate = useNavigate();\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e, handler) => {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      if (index < formattedShortcuts.length) {\n        const { path } = formattedShortcuts[index];\n        if (path) {\n          navigate(path);\n          menuRef.current?.closeMenu?.();\n        }\n      }\n    },\n    {\n      enabled: !isMultiColumnMode,\n    },\n  );\n\n  const [lists, setLists] = useState([]);\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>{list.title}</span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media']?.toLowerCase() || 'default';\n  }, []);\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = store.local.getJSON('accounts') || [];\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes.list({\n        limit: 80,\n      });\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks.list({\n        limit: 80,\n      });\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans id=\"following.title\">Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <ListMenu menuState={menuState} />\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nfunction ListMenu({ menuState }) {\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState, supportsLists]);\n\n  return lists.length > 0 ? (\n    <SubMenu2\n      menuClassName=\"nav-submenu\"\n      overflow=\"auto\"\n      gap={-8}\n      label={\n        <>\n          <Icon icon=\"list\" size=\"l\" />\n          <span class=\"menu-grow\">\n            <Trans>Lists</Trans>\n          </span>\n          <Icon icon=\"chevron-right\" />\n        </>\n      }\n    >\n      <MenuLink to=\"/l\">\n        <span>\n          <Trans>All Lists</Trans>\n        </span>\n      </MenuLink>\n      {lists?.length > 0 && (\n        <>\n          <MenuDivider />\n          {lists.map((list) => (\n            <MenuLink key={list.id} to={`/l/${list.id}`}>\n              <span>{list.title}</span>\n            </MenuLink>\n          ))}\n        </>\n      )}\n    </SubMenu2>\n  ) : (\n    supportsLists && (\n      <MenuLink to=\"/l\">\n        <Icon icon=\"list\" size=\"l\" />\n        <span>\n          <Trans>Lists</Trans>\n        </span>\n      </MenuLink>\n    )\n  );\n}\n\nexport default memo(NavMenu);\n","import { plural, t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n  __BENCHMARK.start(`timeline-${id}-load`);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n          __BENCHMARK.end(`timeline-${id}-load`);\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          if (firstLoad && !items.length && errorText) {\n            showToast(errorText);\n          }\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys('j, shift+j', (_, handler) => {\n    // focus on next status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (handler.shift) {\n        // get next status that's not .timeline-item-alt\n        nextItem = allItems.find(\n          (item, index) =>\n            index > activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k, shift+k', (_, handler) => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (handler.shift) {\n        // get prev status that's not .timeline-item-alt\n        prevItem = allItems.findLast(\n          (item, index) =>\n            index < activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    // open active status\n    const activeItem = document.activeElement;\n    if (activeItem?.matches(itemsSelector)) {\n      activeItem.click();\n    }\n  });\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts);\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef(node);\n          kRef(node);\n          oRef(node);\n          dotRef(node);\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = plural(fItems.length, {\n          one: '# Boost',\n          other: '# Boosts',\n        });\n      } else if (type === 'pinned') {\n        title = t`Pinned posts`;\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered) filteredItemsIDs.add(a.id);\n          if (bFiltered) filteredItemsIDs.add(b.id);\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.fetch({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.fetch({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        });\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      // Check if value is same as pinned post (results)\n      // If the index for every post is the same, means API might not support pinned posts\n      if (results.length) {\n        let pinnedStatusesIds = [];\n        if (results[0]?.type === 'pinned') {\n          pinnedStatusesIds = results[0].id;\n        } else {\n          pinnedStatusesIds = results\n            .filter((status) => status._pinned)\n            .map((status) => status.id);\n        }\n        const containsAllPinned = pinnedStatusesIds.every((postId) =>\n          value.some((status) => status.id === postId),\n        );\n        if (containsAllPinned) {\n          // Remove pinned posts\n          results = [];\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const { i18n } = useLingui();\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = (/@/.test(account.acct) ? '' : '@') + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccountPromiseRef = useRef();\n  const fetchAccount = useCallback(() => {\n    const fetchPromise =\n      fetchAccountPromiseRef.current || masto.v1.accounts.$select(id).fetch();\n    fetchAccountPromiseRef.current = fetchPromise;\n    return fetchPromise;\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url).hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <Timeline\n      key={id}\n      title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n      titleComponent={\n        <h1\n          class=\"header-double-lines header-account\"\n          // onClick={() => {\n          //   states.showAccount = {\n          //     account,\n          //     instance,\n          //   };\n          // }}\n        >\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          <div>\n            <span class=\"bidi-isolate\">@{acct}</span>\n          </div>\n        </h1>\n      }\n      id=\"account-statuses\"\n      instance={instance}\n      emptyText={t`Nothing to see here yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchAccountStatuses}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      timelineStart={TimelineStart}\n      refresh={[\n        excludeReplies,\n        excludeBoosts,\n        tagged,\n        media,\n        month + account?.acct,\n      ].toString()}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            disabled={!allowSwitch}\n            onClick={() => {\n              (async () => {\n                try {\n                  const { masto } = api({\n                    instance: accountInstance,\n                  });\n                  const acc = await masto.v1.accounts.lookup({\n                    acct: account.acct,\n                  });\n                  const { id } = acc;\n                  location.hash = `/${accountInstance}/a/${id}`;\n                } catch (e) {\n                  console.error(e);\n                  alert(t`Unable to fetch account info`);\n                }\n              })();\n            }}\n          >\n            <Icon icon=\"transfer\" />{' '}\n            <small class=\"menu-double-lines\">\n              <Trans>\n                Switch to account's instance{' '}\n                {accountInstance ? (\n                  <>\n                    {' '}\n                    (<b>{punycode.toUnicode(accountInstance)}</b>)\n                  </>\n                ) : null}\n              </Trans>\n            </small>\n          </MenuItem>\n          {!sameCurrentInstance && (\n            <MenuItem\n              onClick={() => {\n                (async () => {\n                  try {\n                    const acc = await currentMasto.v1.accounts.lookup({\n                      acct: account.acct + '@' + instance,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${currentInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1).toString().padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountStatuses;\n","import { t, Trans } from '@lingui/macro';\n\nimport './annual-report.css';\n\nimport { useEffect, useState } from 'preact/hooks';\nimport { useParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NameText from '../components/name-text';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nexport default function AnnualReport() {\n  const params = useParams();\n  const { year } = params;\n  useTitle(year ? `Annual Report: ${year}` : 'Annual Report');\n  const { masto, instance } = api();\n  const [results, setResults] = useState(null);\n  const [uiState, setUIState] = useState('default');\n\n  useEffect(() => {\n    if (year) {\n      (async () => {\n        setUIState('loading');\n        const results = await masto.v1.annualReports.$select(year).fetch();\n        console.log('REPORT', results);\n        setResults(results);\n        setUIState('default');\n      })();\n    }\n  }, [year]);\n\n  const { accounts, annualReports, statuses } = results || {};\n  const report = annualReports?.find((report) => report.year == year)?.data;\n\n  const datePlaceholder = new Date();\n\n  return (\n    <div id=\"annual-report-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"report\">\n        <h1>{year} #Wrapstodon</h1>\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> <Trans>Loading…</Trans>\n          </p>\n        )}\n        {!!report && (\n          <dl>\n            {Object.entries(report).map(([key, value]) => (\n              <>\n                <dt>{key}</dt>\n                <dd class={`report-${key}`}>\n                  {Array.isArray(value) ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          {Object.entries(value[0]).map(([key, value]) => (\n                            <th\n                              class={\n                                key !== 'month' && typeof value === 'number'\n                                  ? 'number'\n                                  : ''\n                              }\n                            >\n                              {key}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {value.map((item) => (\n                          <tr>\n                            {Object.entries(item).map(([k, value]) => (\n                              <td\n                                class={\n                                  k !== 'month' && typeof value === 'number'\n                                    ? 'number'\n                                    : ''\n                                }\n                              >\n                                {value &&\n                                /(accountId)/i.test(k) &&\n                                /^(mostRebloggedAccounts|commonlyInteractedWithAccounts)$/i.test(\n                                  key,\n                                ) ? (\n                                  <NameText\n                                    account={accounts?.find(\n                                      (a) => a.id === value,\n                                    )}\n                                    showAvatar\n                                  />\n                                ) : k === 'month' ? (\n                                  datePlaceholder.setMonth(value - 1) &&\n                                  datePlaceholder.toLocaleString(undefined, {\n                                    month: 'long',\n                                  })\n                                ) : typeof value === 'number' ? (\n                                  value.toLocaleString()\n                                ) : (\n                                  value\n                                )}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : typeof value === 'object' ? (\n                    /^(topStatuses)$/i.test(key) ? (\n                      <dl>\n                        {Object.entries(value).map(([k, value]) => (\n                          <>\n                            <dt>{k}</dt>\n                            <dd>\n                              {value && (\n                                <Link to={`/${instance}/s/${value}`}>\n                                  <Status\n                                    status={statuses?.find(\n                                      (s) => s.id === value,\n                                    )}\n                                    size=\"s\"\n                                    readOnly\n                                  />\n                                </Link>\n                              )}\n                            </dd>\n                          </>\n                        ))}\n                      </dl>\n                    ) : (\n                      <table>\n                        <tbody>\n                          {Object.entries(value).map(([k, value]) => (\n                            <tr>\n                              <th>{k}</th>\n                              <td\n                                class={\n                                  typeof value === 'number' ? 'number' : ''\n                                }\n                              >\n                                {value}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    )\n                  ) : typeof value === 'string' ? (\n                    value\n                  ) : (\n                    // Last resort\n                    JSON.stringify(value, null, 2)\n                  )}\n                </dd>\n              </>\n            ))}\n          </dl>\n        )}\n      </div>\n      <hr />\n      <p style={{ textAlign: 'center' }}>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  useTitle(t`Bookmarks`, '/bookmarks');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks.list({ limit: LIMIT });\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={t`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__S_9SYp01__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, Plural, select, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction Catchup() {\n  const { i18n, _ } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    const maxCreatedAtDate = maxCreatedAt ? new Date(maxCreatedAt) : null;\n    console.debug('fetchHome', maxCreatedAtDate);\n    const allResults = [];\n    const homeIterator = masto.v1.timelines.home.list({ limit: 40 });\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterator.nextParams) {\n          if (typeof homeIterator.nextParams === 'string') {\n            homeIterator.nextParams += '&include_reblogs=true';\n          } else {\n            homeIterator.nextParams.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtDate = new Date(item.createdAt);\n            if (!maxCreatedAtDate || createdAtDate >= maxCreatedAtDate) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered) {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const handleArrowKeys = useCallback((e) => {\n    const activeElement = document.activeElement;\n    const isRadio =\n      activeElement?.tagName === 'INPUT' && activeElement.type === 'radio';\n    const isArrowKeys =\n      e.key === 'ArrowDown' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowRight';\n    if (isArrowKeys && isRadio) {\n      // Note: page scroll won't trigger on first arrow key press due to this. Subsequent presses will.\n      activeElement.blur();\n      return;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n        hlRef(node);\n        escRef(node);\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main onKeyDown={handleArrowKeys}>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let st = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                st?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = punycode.toUnicode(\n                        URL.parse(url)\n                          .hostname.replace(/^www\\./, '')\n                          .replace(/\\/$/, ''),\n                      );\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          class=\"link-block\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <button\n                                        type=\"button\"\n                                        class=\"plain\"\n                                        style={{\n                                          padding: 0,\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          e.stopPropagation();\n                                          // Reset and filter to author\n                                          const { id } = s;\n                                          setSelectedAuthor(id);\n                                          setSelectedFilterCategory('all');\n                                        }}\n                                      >\n                                        <Avatar\n                                          url={avatarStatic}\n                                          size=\"s\"\n                                          alt={displayName}\n                                        />\n                                      </button>\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order = /(replies|favourites|reblogs)/.test(\n                              key,\n                            )\n                              ? 'desc'\n                              : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans id=\"group.filter\">Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo;\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n              ? 'reblog'\n              : isFollowedTags?.length\n                ? 'followed-tags'\n                : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n        ? CARD_DENSITY\n        : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  // const readingExpandSpoilers = true;\n  const showMedia = readingExpandSpoilers || (!spoilerText && !sensitive);\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: emojifyText(content, emojis),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {!filterInfo && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { reblogsCount, repliesCount, favouritesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 && (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {shortenNumber(reblogsCount)}\n        </span>\n      )}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = maxDate.getTime() - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const date = new Date(item[key]);\n    const normalized = (date.getTime() - minDate.getTime()) / range;\n    const binIndex = Math.floor(normalized * (numBins - 1));\n    bins[binIndex].push(item);\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { t, Trans } from '@lingui/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites.list({ limit: LIMIT });\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={t`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { i18n } from '@lingui/core';\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - new Date()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={filterAction === 'warn' || !editMode}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && expiresAtDate <= new Date();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  useTitle(\n    title ||\n      t({\n        id: 'following.title',\n        message: 'Following',\n      }),\n    path || '/following',\n  );\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterator = useRef();\n  const latestItem = useRef();\n  __BENCHMARK.end('time-to-following');\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      __BENCHMARK.start('fetch-home-first');\n      homeIterator.current = masto.v1.timelines.home.list({ limit: LIMIT });\n    }\n    if (supportsPixelfed && homeIterator.current?.nextParams) {\n      if (typeof homeIterator.current.nextParams === 'string') {\n        homeIterator.current.nextParams += '&include_reblogs=true';\n      } else {\n        homeIterator.current.nextParams.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    __BENCHMARK.end('fetch-home-first');\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || t({ id: 'following.title', message: 'Following' })}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n      ? t`${hashtagTitle} (Media only)`\n      : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   });\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <Timeline\n      key={instance + hashtagTitle}\n      title={title}\n      titleComponent={\n        !!instance && (\n          <h1 class=\"header-double-lines\">\n            <b dir=\"auto\">{hashtagTitle}</b>\n            <div>{instance}</div>\n          </h1>\n        )\n      }\n      id=\"hashtag\"\n      instance={instance}\n      emptyText={t`No one has posted anything with this tag yet.`}\n      errorText={t`Unable to load posts with this tag`}\n      fetchItems={fetchHashtags}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      refresh={media}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          setDownOverflow\n          overflow=\"auto\"\n          // viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          {!!info && hashtags.length === 1 && (\n            <>\n              <MenuConfirm\n                subMenu\n                confirm={info.following}\n                confirmLabel={t`Unfollow #${hashtag}?`}\n                disabled={followUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFollowUIState('loading');\n                  if (info.following) {\n                    // const yes = confirm(`Unfollow #${hashtag}?`);\n                    // if (!yes) {\n                    //   setFollowUIState('default');\n                    //   return;\n                    // }\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .unfollow()\n                      .then(() => {\n                        setInfo({ ...info, following: false });\n                        showToast(t`Unfollowed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  } else {\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .follow()\n                      .then(() => {\n                        setInfo({ ...info, following: true });\n                        showToast(t`Followed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  }\n                }}\n              >\n                {info.following ? (\n                  <>\n                    <Icon icon=\"check-circle\" />{' '}\n                    <span>\n                      <Trans>Following…</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"plus\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuConfirm>\n              <MenuItem\n                type=\"checkbox\"\n                checked={isFeaturedTag}\n                disabled={featuredUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFeaturedUIState('loading');\n                  if (isFeaturedTag) {\n                    const featuredTagID = featuredTags.find(\n                      (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n                    ).id;\n                    if (featuredTagID) {\n                      masto.v1.featuredTags\n                        .$select(featuredTagID)\n                        .remove()\n                        .then(() => {\n                          setIsFeaturedTag(false);\n                          showToast(t`Unfeatured on profile`);\n                          setFeaturedTags(\n                            featuredTags.filter(\n                              (tag) => tag.id !== featuredTagID,\n                            ),\n                          );\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    } else {\n                      showToast(t`Unable to unfeature on profile`);\n                    }\n                  } else {\n                    masto.v1.featuredTags\n                      .create({\n                        name: hashtag,\n                      })\n                      .then((value) => {\n                        setIsFeaturedTag(true);\n                        showToast(t`Featured on profile`);\n                        setFeaturedTags(featuredTags.concat(value));\n                      })\n                      .catch((e) => {\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFeaturedUIState('default');\n                      });\n                  }\n                }}\n              >\n                {isFeaturedTag ? (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Featured on profile</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Feature on profile</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          {!mediaFirst && (\n            <>\n              <MenuHeader className=\"plain\">\n                <Trans>Filters</Trans>\n              </MenuHeader>\n              <MenuItem\n                type=\"checkbox\"\n                checked={!!media}\n                onClick={() => {\n                  if (media) {\n                    searchParams.delete('media');\n                  } else {\n                    searchParams.set('media', '1');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                <span class=\"menu-grow\">\n                  <Trans>Media only</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n            {({ ref }) => (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const newHashtag = e.target[0].value?.trim?.();\n                  // Use includes but need to be case insensitive\n                  if (\n                    newHashtag &&\n                    !hashtags.some(\n                      (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                    )\n                  ) {\n                    hashtags.push(newHashtag);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }\n                }}\n              >\n                <Icon icon=\"hashtag\" />\n                <input\n                  ref={ref}\n                  type=\"text\"\n                  placeholder={\n                    reachLimit\n                      ? plural(TOTAL_TAGS_LIMIT, {\n                          other: 'Max # tags',\n                        })\n                      : t`Add hashtag`\n                  }\n                  required\n                  autocorrect=\"off\"\n                  autocapitalize=\"off\"\n                  spellCheck={false}\n                  // no spaces, no hashtags\n                  pattern=\"[^#][^\\s#]+[^#]\"\n                  disabled={reachLimit}\n                  dir=\"auto\"\n                />\n              </form>\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {hashtags.map((tag, i) => (\n              <MenuItem\n                key={tag}\n                disabled={hashtags.length === 1}\n                onClick={(e) => {\n                  hashtags.splice(i, 1);\n                  hashtags.sort();\n                  // navigate(\n                  //   instance\n                  //     ? `/${instance}/t/${hashtags.join('+')}`\n                  //     : `/t/${hashtags.join('+')}`,\n                  // );\n                  location.hash = instance\n                    ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                    : `/t/${hashtags.join('+')}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                <span class=\"bidi-isolate\">\n                  <span class=\"more-insignificant\">#</span>\n                  {tag}\n                </span>\n              </MenuItem>\n            ))}\n          </MenuGroup>\n          <MenuDivider />\n          <MenuItem\n            disabled={!currentAuthenticated}\n            onClick={() => {\n              if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                alert(\n                  plural(SHORTCUTS_LIMIT, {\n                    one: 'Max # shortcut reached. Unable to add shortcut.',\n                    other: 'Max # shortcuts reached. Unable to add shortcut.',\n                  }),\n                );\n                return;\n              }\n              const shortcut = {\n                type: 'hashtag',\n                hashtag: hashtags.join(' '),\n                instance,\n                media: media ? 'on' : undefined,\n              };\n              // Check if already exists\n              const exists = states.shortcuts.some(\n                (s) =>\n                  s.type === shortcut.type &&\n                  s.hashtag\n                    .split(/[\\s+]+/)\n                    .sort()\n                    .join(' ') ===\n                    shortcut.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') &&\n                  (s.instance ? s.instance === shortcut.instance : true) &&\n                  (s.media ? !!s.media === !!shortcut.media : true),\n              );\n              if (exists) {\n                alert(t`This shortcut already exists`);\n              } else {\n                states.shortcuts.push(shortcut);\n                showToast(t`Hashtag shortcut added`);\n              }\n            }}\n          >\n            <Icon icon=\"shortcut\" />{' '}\n            <span>\n              <Trans>Add to Shortcuts</Trans>\n            </span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                location.hash = `/${newInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list.$select(id).list({\n        limit: LIMIT,\n      });\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    getLists().then(setLists);\n  }, []);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>{list.title}</span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\nfunction ListManageMembers({ listID, onClose }) {\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            });\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\n\nconst GROUP_TYPES = ['favourite', 'reblog', 'follow'];\nconst groupable = (type) => GROUP_TYPES.includes(type);\n\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  const notificationsMap = {};\n  const newGroupNotifications1 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const {\n      type,\n      status,\n      createdAt,\n      notificationsCount,\n      sampleAccounts,\n      groupKey,\n    } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    // const sameCount =\n    notificationsCount > 0 && notificationsCount === sampleAccounts?.length;\n    // if (sameCount && (type === 'favourite' || type === 'reblog')) {\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    // const key = `${status?.id}-${virtualType}-${date}-${sameCount ? 1 : 0}`;\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      newGroupNotifications1.push(gn);\n    } else if (mappedNotification) {\n      // Merge sampleAccounts + merge _types\n      sampleAccounts.forEach((a) => {\n        const mappedAccount = mappedNotification.sampleAccounts.find(\n          (ma) => ma.id === a.id,\n        );\n        if (!mappedAccount) {\n          mappedNotification.sampleAccounts.push({\n            ...a,\n            _types: [type],\n          });\n        } else {\n          mappedAccount._types.push(type);\n          mappedAccount._types.sort().reverse();\n        }\n      });\n      // mappedNotification.notificationsCount =\n      //   mappedNotification.sampleAccounts.length;\n      mappedNotification.notificationsCount = Math.min(\n        mappedNotification.notificationsCount,\n        notificationsCount,\n      );\n      mappedNotification._notificationsCount.push(notificationsCount);\n      mappedNotification._accounts = mappedNotification.sampleAccounts;\n      mappedNotification._groupKeys.push(groupKey);\n    } else {\n      const accounts = sampleAccounts.map((a) => ({\n        ...a,\n        _types: [type],\n      }));\n      notificationsMap[key] = {\n        ...gn,\n        sampleAccounts: accounts,\n        type: virtualType,\n        _accounts: accounts,\n        _groupKeys: groupKey ? [groupKey] : [],\n        _notificationsCount: [notificationsCount],\n      };\n      newGroupNotifications1.push(notificationsMap[key]);\n    }\n  }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications1.length; i++) {\n    const gn = newGroupNotifications1[i];\n    const { type, account, _accounts, sampleAccounts, createdAt, groupKey } =\n      gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if (\n      (type === 'favourite' ||\n        type === 'reblog' ||\n        type === 'favourite+reblog') &&\n      hasOneAccount\n    ) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n        mappedNotification._groupKeys.push(groupKey);\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n          _groupKeys: groupKey ? [groupKey] : [],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  console.log('newGroupNotifications2', newGroupNotifications2);\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        types: ['mention'],\n      });\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => supports('@mastodon/grouped-notifications'),\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nexport function mastoFetchNotifications(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _ } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterator.current = mastoFetchNotifications({\n        excludeTypes: ['follow_request'],\n      });\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const [annualReportNotification, setAnnualReportNotification] =\n    useState(null);\n  useEffect(async () => {\n    // Skip this if not in December\n    const date = new Date();\n    if (date.getMonth() !== 11) return;\n\n    // Skip if doesn't support annual report\n    if (!supports('@mastodon/annual-report')) return;\n\n    let annualReportNotification = store.account.get(\n      'annualReportNotification',\n    );\n    if (annualReportNotification) {\n      setAnnualReportNotification(annualReportNotification);\n      return;\n    }\n    const notificationIterator = mastoFetchNotifications({\n      types: ['annual_report'],\n    });\n    try {\n      const notification = await notificationIterator.next();\n      annualReportNotification = notification?.value?.notificationGroups?.[0];\n      const annualReportYear = annualReportNotification?.annualReport?.year;\n      // If same year, show the annual report\n      if (annualReportYear == date.getFullYear()) {\n        console.log(\n          'ANNUAL REPORT',\n          annualReportYear,\n          annualReportNotification,\n        );\n        setAnnualReportNotification(annualReportNotification);\n        store.account.set('annualReportNotification', annualReportNotification);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const statusLink = activeItem?.querySelector('.status-link');\n    if (statusLink) {\n      statusLink.click();\n    }\n  });\n\n  const today = new Date();\n  const todaySubHeading = useMemo(() => {\n    return niceDateTime(today, {\n      forceOpts: {\n        weekday: 'long',\n      },\n    });\n  }, [today]);\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n        oRef(node);\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        {annualReportNotification && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <Notification notification={annualReportNotification} />\n            </div>\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>{' '}\n          <small class=\"insignificant bidi-isolate\">{todaySubHeading}</small>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                const subHeading = niceDateTime(currentDay, {\n                  forceOpts: {\n                    weekday: 'long',\n                  },\n                });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && (\n                      <h2 class=\"timeline-header\">\n                        <span>{heading}</span>{' '}\n                        <small class=\"insignificant bidi-isolate\">\n                          {subHeading}\n                        </small>\n                      </h2>\n                    )}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts);\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Search({ columnMode, ...props }) {\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const typeResults = {\n    statuses: statusResults,\n    accounts: accountResults,\n    hashtags: hashtagResults,\n  };\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.fetch(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            // If first item is the same, it means API doesn't support offset\n            // I know this is a very basic check, but it works for now\n            if (results[type]?.[0]?.id === typeResults[type]?.[0]?.id) {\n              setShowMore(false);\n            } else {\n              setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n              const length = results[type]?.length;\n              offsetRef.current = offsetRef.current + LIMIT;\n              setShowMore(!!length);\n            }\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    let timer;\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      timer = setTimeout(() => {\n        searchFormRef.current?.focus?.();\n      }, 150); // Right after focusDeck runs\n    }\n    return () => clearTimeout(timer);\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['/', 'Slash'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      preventDefault: true,\n    },\n  );\n\n  const itemsSelector = '.timeline > li > a, .hashtag-list > li > a';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div\n      id=\"search-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef(node);\n        kRef(node);\n      }}\n    >\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>\n                Enter your search term or paste a URL above to get started.\n              </Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending.list({\n      range: 'daily',\n    });\n  }\n  return masto.v1.trends.statuses.list({\n    limit: LIMIT,\n  });\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params);\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authors,\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const author = authors?.[0]?.account?.id\n                ? authors[0].account\n                : null;\n              const isShortTitle = title.length < 30;\n              const hasAuthor = !!(authorName || author);\n              const domain = punycode.toUnicode(\n                URL.parse(url)\n                  .hostname.replace(/^www\\./, '')\n                  .replace(/\\/$/, ''),\n              );\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class={`link-block ${\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }`}\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class={`description ${\n                              hasAuthor && !isShortTitle ? '' : 'more-lines'\n                            }`}\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                        {hasAuthor && (\n                          <>\n                            <hr />\n                            <p class=\"byline\">\n                              <small>\n                                <Trans comment=\"By [Author]\">\n                                  By{' '}\n                                  {author ? (\n                                    <NameText account={author} showAvatar />\n                                  ) : authorUrl ? (\n                                    <a\n                                      href={authorUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                    >\n                                      {authorName}\n                                    </a>\n                                  ) : (\n                                    authorName\n                                  )}\n                                </Trans>\n                              </small>\n                            </p>\n                          </>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { t, Trans } from '@lingui/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport isRTL from '../utils/is-rtl';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'nearest',\n  behavior: 'smooth',\n};\n\nfunction Columns() {\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    try {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      const $column = document.querySelectorAll('#columns > *')[index];\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  useHotkeys(['[', ']'], (e, handler) => {\n    const key = handler.keys[0];\n    const currentFocusedColumn = document.activeElement.closest('#columns > *');\n\n    const rtl = isRTL();\n    const prevColKey = rtl ? ']' : '[';\n    const nextColKey = rtl ? '[' : ']';\n    let $column;\n\n    if (key === prevColKey) {\n      // If [, focus on left of focused column, else first column\n      $column = currentFocusedColumn\n        ? currentFocusedColumn.previousElementSibling\n        : document.querySelectorAll('#columns > *')[0];\n    } else if (key === nextColKey) {\n      // If ], focus on right of focused column, else 2nd column\n      $column = currentFocusedColumn\n        ? currentFocusedColumn.nextElementSibling\n        : document.querySelectorAll('#columns > *')[1];\n    }\n    if ($column) {\n      $column.focus();\n      $column.scrollIntoView(scrollIntoViewOptions);\n    }\n  });\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n      onFocus={() => {\n        // Get current focused column\n        const currentFocusedColumn =\n          document.activeElement.closest('#columns > *');\n        if (currentFocusedColumn) {\n          // Remove focus classes from all columns\n          // Add focus class to current focused column\n          document.querySelectorAll('#columns > *').forEach((column) => {\n            column.classList.toggle('focus', column === currentFocusedColumn);\n          });\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  __BENCHMARK.end('time-to-home');\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications() {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        const followRequests = await fetchFollowRequests();\n        setHasFollowRequests(!!followRequests?.length);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    if (state === 'open') loadNotifications();\n  }, [state]);\n\n  const menuRef = useRef();\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <main>\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n              .map((notification) => (\n                <Notification\n                  key={notification._ids || notification.id}\n                  instance={instance}\n                  notification={notification}\n                  disableContextMenu\n                />\n              ))}\n          </>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : (\n          uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>\n                <Trans>Unable to fetch notifications.</Trans>\n              </p>\n              <p>\n                <button type=\"button\" onClick={loadNotifications}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            </div>\n          )\n        )}\n      </main>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+\\/post\\/([^\\/]+)/i, // Threads\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const { hostname, pathname } = URL.parse(url);\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { t, Trans } from '@lingui/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.fetch({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <span>\n                        <Icon icon=\"list\" /> <span>{list.title}</span>\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural value={lists.length} one=\"# list\" other=\"# lists\" />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Y_wpqkTO__\"","function dec2hex(dec) {\n  return ('0' + dec.toString(16)).slice(-2);\n}\nexport function verifier() {\n  var array = new Uint32Array(56 / 2);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\nfunction base64urlencode(a) {\n  let str = '';\n  const bytes = new Uint8Array(a);\n  const len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    str += String.fromCharCode(bytes[i]);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generateCodeChallenge(v) {\n  const hashed = await sha256(v);\n  return base64urlencode(hashed);\n}\n\n// If /.well-known/oauth-authorization-server exists and code_challenge_methods_supported includes \"S256\", means support PKCE\nexport async function supportsPKCE({ instanceURL }) {\n  if (!instanceURL) return false;\n  try {\n    const res = await fetch(\n      `https://${instanceURL}/.well-known/oauth-authorization-server`,\n    );\n    if (!res.ok || res.status !== 200) return false;\n    const json = await res.json();\n    if (json.code_challenge_methods_supported?.includes('S256')) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n// For debugging\nwindow.__generateCodeChallenge = generateCodeChallenge;\n","import { generateCodeChallenge, verifier } from './oauth-pkce';\n\nconst {\n  DEV,\n  PHANPY_CLIENT_NAME: CLIENT_NAME,\n  PHANPY_WEBSITE: WEBSITE,\n} = import.meta.env;\n\nconst SCOPES = 'read write follow push';\n\n/*\n  PHANPY_WEBSITE is set to the default official site.\n  It's used in pre-built releases, so there's no way to change it dynamically\n  without rebuilding.\n  Therefore, we can't use it as redirect_uri.\n  We only use PHANPY_WEBSITE if it's \"same\" as current location URL.\n  \n  Very basic check based on location.hostname for now\n*/\nconst sameSite = WEBSITE\n  ? WEBSITE.toLowerCase().includes(location.hostname)\n  : false;\nconst currentLocation = location.origin + location.pathname;\nconst REDIRECT_URI = DEV || !sameSite ? currentLocation : WEBSITE;\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: REDIRECT_URI,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getPKCEAuthorizationURL({ instanceURL, client_id }) {\n  const codeVerifier = verifier();\n  const codeChallenge = await generateCodeChallenge(codeVerifier);\n  const params = new URLSearchParams({\n    client_id,\n    code_challenge_method: 'S256',\n    code_challenge: codeChallenge,\n    redirect_uri: REDIRECT_URI,\n    response_type: 'code',\n    scope: SCOPES,\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${params.toString()}`;\n  return [authorizationURL, codeVerifier];\n}\n\nexport async function getAuthorizationURL({ instanceURL, client_id }) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: REDIRECT_URI,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n  code_verifier,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    redirect_uri: REDIRECT_URI,\n    grant_type: 'authorization_code',\n    code,\n    scope: SCOPES,\n    // client_secret,\n    // code_verifier,\n  });\n  if (client_secret) {\n    params.append('client_secret', client_secret);\n  }\n  if (code_verifier) {\n    params.append('code_verifier', code_verifier);\n  }\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n","import './login.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport {\n  getAuthorizationURL,\n  getPKCEAuthorizationURL,\n  registerApplication,\n} from '../utils/auth';\nimport { supportsPKCE } from '../utils/oauth-pkce';\nimport store from '../utils/store';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  useTitle('Log in');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n\n    (async () => {\n      // WEB_DOMAIN vs LOCAL_DOMAIN negotiation time\n      // https://docs.joinmastodon.org/admin/config/#web_domain\n      try {\n        const res = await fetch(`https://${instanceURL}/.well-known/host-meta`); // returns XML\n        const text = await res.text();\n        // Parse XML\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        // Get Link[template]\n        const link = xmlDoc.getElementsByTagName('Link')[0];\n        const template = link.getAttribute('template');\n        const url = URL.parse(template);\n        const { host } = url; // host includes the port\n        if (instanceURL !== host) {\n          console.log(`💫 ${instanceURL} -> ${host}`);\n          instanceURL = host;\n        }\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n\n      store.local.set('instanceURL', instanceURL);\n\n      setUIState('loading');\n      try {\n        const { client_id, client_secret, vapid_key } =\n          await registerApplication({\n            instanceURL,\n          });\n\n        const authPKCE = await supportsPKCE({ instanceURL });\n        console.log({ authPKCE });\n        if (authPKCE) {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            const [url, verifier] = await getPKCEAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n            store.sessionCookie.set('codeVerifier', verifier);\n            location.href = url;\n          } else {\n            alert(t`Failed to register application`);\n          }\n        } else {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            location.href = await getAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n          } else {\n            alert(t`Failed to register application`);\n          }\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n      ? instancesSuggestions[0]\n      : instanceText\n        ? instancesList.find((instance) => instance.includes(instanceText))\n        : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={t`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './status.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const handleMediaClose = useCallback(() => {\n    if (\n      !window.matchMedia('(min-width: calc(40em + 350px))').matches &&\n      snapStates.prevLocation\n    ) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\n// oldest first\nfunction createdAtSort(a, b) {\n  return new Date(b.created_at) - new Date(a.created_at);\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        ancestors.sort(createdAtSort);\n        descendants.sort(createdAtSort);\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find(\n              (s) =>\n                s.id === status.inReplyToId &&\n                s.account.id === heroStatus.account.id,\n            ) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        // sort hero author to top\n        nestedDescendants.sort((a, b) => {\n          const heroAccountID = heroStatus.account.id;\n          if (a.account.id === heroAccountID && b.account.id !== heroAccountID)\n            return -1;\n          if (b.account.id === heroAccountID && a.account.id !== heroAccountID)\n            return 1;\n          return 0;\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        let descendantLevelsCount = 1;\n        function expandReplies(_replies, level) {\n          const nextLevel = level + 1;\n          if (nextLevel > descendantLevelsCount) {\n            descendantLevelsCount = level;\n          }\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            level: nextLevel,\n            replies: expandReplies(_r.__replies, nextLevel),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            level: 1,\n            replies: expandReplies(s.__replies, 1),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        // const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        const heroLimit = ancestors.length || 0; // 0-indexed\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses, descendantLevelsCount });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t({\n          id: 'post.title',\n          message: 'Post',\n        }),\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url).hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys('backspace', () => {\n    location.hash = closeLink;\n  });\n\n  useHotkeys('j', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    console.log({ allStatusLinks });\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let nextStatus = allStatusLinks[activeStatusIndex + 1];\n      if (nextStatus) {\n        nextStatus.focus();\n        nextStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  useHotkeys('k', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let prevStatus = allStatusLinks[activeStatusIndex - 1];\n      if (prevStatus) {\n        prevStatus.focus();\n        prevStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys('x', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const details = activeStatus.nextElementSibling;\n      if (details && details.tagName.toLowerCase() === 'details') {\n        details.open = !details.open;\n      }\n    }\n  });\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n        level,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link\n                    to={\n                      DEFAULT_INSTANCE\n                        ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                        : '/login'\n                    }\n                    class=\"button\"\n                  >\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.fetch({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={level}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title={t`Go to main post`}\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                <Trans id=\"post.title\">Post</Trans>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={t`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={ancestor.account.avatar}\n                        alt={ancestor.account.displayName}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title={t`Switch to Side Peek view`}\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>\n                  <Trans>Refresh</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  {viewMode === 'full'\n                    ? t`Switch to Side Peek view`\n                    : t`Switch to Full view`}\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" />{' '}\n                <span>\n                  <Trans>Show all sensitive content</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">\n                <Trans>Experimental</Trans>\n              </MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert(t`Unable to switch`);\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  {postInstance\n                    ? t`Switch to post's instance (${punycode.toUnicode(\n                        postInstance,\n                      )})`\n                    : t`Switch to post's instance`}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li class=\"descendant descendant-more\">\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  <Trans>Show more…</Trans>{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              <Trans>Unable to load post</Trans>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // If not open, delay render replies\n  const [renderReplies, setRenderReplies] = useState(openBefore || open);\n  useEffect(() => {\n    let timer;\n    if (!openBefore && !open) {\n      timer = setTimeout(() => setRenderReplies(true), 100);\n    }\n    return () => clearTimeout(timer);\n  }, [openBefore, open]);\n\n  const Container = open ? 'div' : 'details';\n  const isDetails = Container === 'details';\n\n  return (\n    <Container\n      ref={detailsRef}\n      class=\"replies\"\n      open={isDetails ? openBefore || open : undefined}\n      onToggle={\n        isDetails\n          ? (e) => {\n              const { open } = e.target;\n              // use first reply as ID\n              cachedRepliesToggle[replies[0].id] = open;\n            }\n          : undefined\n      }\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      {!open && (\n        <summary class=\"replies-summary\" hidden={open}>\n          <span class=\"avatars\">\n            {accounts.map((a) => (\n              <Avatar\n                key={a.id}\n                url={a.avatarStatic}\n                title={`${a.displayName} @${a.username}`}\n                squircle={a?.bot}\n              />\n            ))}\n          </span>\n          <span class=\"replies-counts\">\n            <b>\n              <Plural\n                value={replies.length}\n                one=\"# reply\"\n                other={\n                  <Trans>\n                    <span title={replies.length}>\n                      {shortenNumber(replies.length)}\n                    </span>{' '}\n                    replies\n                  </Trans>\n                }\n              />\n            </b>\n            {!sameCount && totalComments > 1 && (\n              <>\n                {' '}\n                &middot;{' '}\n                <span>\n                  <Plural\n                    value={totalComments}\n                    one=\"# comment\"\n                    other={\n                      <Trans>\n                        <span title={totalComments}>\n                          {shortenNumber(totalComments)}\n                        </span>{' '}\n                        comments\n                      </Trans>\n                    }\n                  />\n                </span>\n              </>\n            )}\n          </span>\n          <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n          {!!parentLink && (\n            <Link\n              class=\"replies-parent-link\"\n              to={parentLink.to}\n              onClick={parentLink.onClick}\n              title={t`View post with its replies`}\n            >\n              &raquo;\n            </Link>\n          )}\n        </summary>\n      )}\n      {renderReplies && (\n        <ul>\n          {replies.map((r) => (\n            <li key={r.id}>\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n              <div class=\"status-focus\" tabIndex={0}>\n                <Status\n                  statusID={r.id}\n                  instance={instance}\n                  withinContext\n                  size=\"s\"\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  showActionsBar\n                />\n                {!r.replies?.length && r.repliesCount > 0 && (\n                  <div class=\"replies-link\">\n                    <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                    <span title={r.repliesCount}>\n                      {shortenNumber(r.repliesCount)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {/* </Link> */}\n              {r.replies?.length && (\n                <SubComments\n                  instance={instance}\n                  replies={r.replies}\n                  level={r.level}\n                  accWeight={!open ? r.weight : totalWeight}\n                  openAll={openAll}\n                  parentLink={{\n                    to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                    onClick: () => {\n                      resetScrollPosition(r.id);\n                    },\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__W5CngKHO__\"","export default \"__VITE_ASSET__vmqRZ5q5__\"","export default \"__VITE_ASSET__DFAo1Udm__\"","export default \"__VITE_ASSET__D2_o1n6___\"","export default \"__VITE_ASSET__ySLnBMku__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { t, Trans } from '@lingui/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logoText from '../assets/logo-text.svg';\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport { memo } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport AnnualReport from './pages/annual-report';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  hasInstance,\n  hasPreferences,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport {\n  getAccount,\n  getCurrentAccount,\n  setCurrentAccountID,\n} from './utils/store-utils';\n\nimport './utils/toast-alert';\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(\n  () => {\n    if (!window.__IDLE__) return;\n    const { statuses, unfurledLinks, notifications } = states;\n    let keysCount = 0;\n    const { instance } = api();\n    for (const key in statuses) {\n      if (!window.__IDLE__) break;\n      try {\n        const $post = document.querySelector(\n          `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n        );\n        const postInNotifications = notifications.some(\n          (n) => key === statusKey(n.status?.id, instance),\n        );\n        if (!$post && !postInNotifications) {\n          delete states.statuses[key];\n          delete states.statusQuotes[key];\n          for (const link in unfurledLinks) {\n            const unfurled = unfurledLinks[link];\n            const sKey = statusKey(unfurled.id, unfurled.instance);\n            if (sKey === key) {\n              delete states.unfurledLinks[link];\n              break;\n            }\n          }\n          keysCount++;\n        }\n      } catch (e) {}\n    }\n    if (keysCount) {\n      console.info(`GC: Removed ${keysCount} keys`);\n    }\n  },\n  15 * 60 * 1000,\n);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      // Don't reset theme color if media modal is showing\n      // Media modal will set its own theme color based on the media's color\n      const showingMediaModal =\n        document.getElementsByClassName('media-modal-container').length > 0;\n      if (showingMediaModal) return;\n\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nconst BENCHES = new Map();\nwindow.__BENCH_RESULTS = new Map();\nwindow.__BENCHMARK = {\n  start(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    // If already started, ignore\n    if (BENCHES.has(name)) return;\n    const start = performance.now();\n    BENCHES.set(name, start);\n  },\n  end(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    const start = BENCHES.get(name);\n    if (start) {\n      const end = performance.now();\n      const duration = end - start;\n      __BENCH_RESULTS.set(name, duration);\n      BENCHES.delete(name);\n    }\n  },\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  __BENCHMARK.start('app-init');\n  __BENCHMARK.start('time-to-following');\n  __BENCHMARK.start('time-to-home');\n  __BENCHMARK.start('time-to-isLoggedIn');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const clientID = store.sessionCookie.get('clientID');\n      const clientSecret = store.sessionCookie.get('clientSecret');\n      const vapidKey = store.sessionCookie.get('vapidKey');\n      const verifier = store.sessionCookie.get('codeVerifier');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n          code_verifier: verifier || undefined,\n        });\n\n        if (accessToken) {\n          const client = initClient({ instance: instanceURL, accessToken });\n          await Promise.allSettled([\n            initPreferences(client),\n            initInstance(client, instanceURL),\n            initAccount(client, instanceURL, accessToken, vapidKey),\n          ]);\n          initStates();\n          window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n\n          setIsLoggedIn(true);\n          setUIState('default');\n        } else {\n          setUIState('error');\n        }\n        __BENCHMARK.end('app-init');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const searchAccount = decodeURIComponent(\n        (window.location.search.match(/account=([^&]+)/) || [, ''])[1],\n      );\n      let account;\n      if (searchAccount) {\n        account = getAccount(searchAccount);\n        console.log('searchAccount', searchAccount, account);\n        if (account) {\n          setCurrentAccountID(account.info.id);\n          window.history.replaceState(\n            {},\n            document.title,\n            window.location.pathname || '/',\n          );\n        }\n      }\n      if (!account) {\n        account = getCurrentAccount();\n      }\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            if (hasPreferences() && hasInstance(instance)) {\n              // Non-blocking\n              initPreferences(client);\n              initInstance(client, instance);\n            } else {\n              await Promise.allSettled([\n                initPreferences(client),\n                initInstance(client, instance),\n              ]);\n            }\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n            __BENCHMARK.end('app-init');\n          }\n        })();\n      } else {\n        setUIState('default');\n        __BENCHMARK.end('app-init');\n      }\n    }\n\n    // Cleanup\n    store.sessionCookie.del('clientID');\n    store.sessionCookie.del('clientSecret');\n    store.sessionCookie.del('codeVerifier');\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  if (uiState === 'loading') {\n    return <Loader id=\"loader-root\" />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      <Routes>\n        <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n      </Routes>\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      <SearchCommand onClose={focusDeck} />\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction Root({ isLoggedIn }) {\n  if (isLoggedIn) {\n    __BENCHMARK.end('time-to-isLoggedIn');\n  }\n  return isLoggedIn ? <Home /> : <Welcome />;\n}\n\nconst PrimaryRoutes = memo(({ isLoggedIn }) => {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route path=\"/\" element={<Root isLoggedIn={isLoggedIn} />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n    </Routes>\n  );\n});\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n          <Route path=\"/annual_report/:year\" element={<AnnualReport />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { initActivateLang } from './utils/lang';\n\ninitActivateLang();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\n// Service worker cache cleanup\nif ('serviceWorker' in navigator && typeof caches !== 'undefined') {\n  const MAX_SW_CACHE_SIZE = 50;\n  const IGNORE_CACHE_KEYS = ['icons'];\n  let clearRanOnce = false;\n  const FAST_INTERVAL = 10_000; // 10 seconds\n  const SLOW_INTERVAL = 60 * 60 * 1000; // 1 hour\n  async function clearCaches() {\n    if (window.__IDLE__) {\n      try {\n        const keys = await caches.keys();\n        for (const key of keys) {\n          if (IGNORE_CACHE_KEYS.includes(key)) continue;\n          const cache = await caches.open(key);\n          const _keys = await cache.keys();\n          if (_keys.length > MAX_SW_CACHE_SIZE) {\n            console.warn('Cleaning cache', key, _keys.length);\n            const deleteKeys = _keys.slice(MAX_SW_CACHE_SIZE);\n            for (const deleteKey of deleteKeys) {\n              await cache.delete(deleteKey);\n            }\n          }\n        }\n        clearRanOnce = true;\n      } catch (e) {} // Silent fail\n    }\n    // Once cleared, clear again at slower interval\n    setTimeout(clearCaches, clearRanOnce ? SLOW_INTERVAL : FAST_INTERVAL);\n  }\n  setTimeout(clearCaches, FAST_INTERVAL);\n}\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","visible","setVisible","useState","visibleTimeout","clearTimeout","setTimeout","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","user","notification","subscribe","log","entry","_a","checkForUpdates","clearInterval","r","info","useInterval","lastCheckDate","useHotkeys","currentCloakMode","Date","diff","i18n","settings","text","_","ComposeButton","snapStates","useSnapshot","handleButton","composerState","minimized","openOSK","shiftKey","openCompose","showCompose","ignoreEventWhen","querySelector","_jsx","type","onClick","class","publishing","publishingError","children","Icon","icon","size","alt","KeyboardShortcutsHelp","onClose","showKeyboardShortcutsHelp","hasModal","Modal","tabindex","Trans","keys","0","action","className","1","2","map","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","target","i","child","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","style","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","isStandalone","matchMedia","matches","Accounts","accounts","store","local","getJSON","currentAccount","getCurrentAccountID","moreThanOneAccount","reload","useReducer","accountsListParent","_jsxs","tabIndex","ref","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","$select","NameText","test","showAcct","setCurrentAccountID","_Fragment","Menu2","align","menuButton","disabled","location","MenuLink","href","MenuDivider","MenuItem","splice","MenuConfirm","subMenu","confirmLabel","menuItemClassName","Link","to","logo","regionMaps","LangSelector","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","replace","native","localeCode2Text","code","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","a","b","order","localeCompare","DEFAULT_LANG","onChange","set","common","import","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","undefined","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","sameKey","vapidKey","key2","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","data","policy","removeSubscription","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_WEBSITE","WEBSITE","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","Settings","currentTheme","get","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","authenticated","onInput","formData","theme","documentElement","html","classList","$manualMeta","$autoMetas","querySelectorAll","m","toggle","defaultChecked","fontSize","min","max","step","parseInt","setProperty","rel","for","checked","autoRefresh","boostsCarousel","targetLanguages","showCommon","contentTranslationHideLanguages","contentTranslation","composerGIFPicker","mediaAltGenerator","supports","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","PushNotificationsSection","display","flexWrap","gap","lineHeight","src","aspectRatio","verticalAlign","borderRadius","RelativeTime","datetime","readOnly","__BUILD_TIME__","showToast","caches","uiState","setUIState","allowNotifications","setAllowNotifications","setNeedRelogin","pushFormRef","needRelogin","alerts","previousPolicyRef","policyEl","namedItem","isLoading","values","mention","favourite","reblog","follow","follow_request","followRequest","status","key","alertsCount","allowNotifications2","alert","permission","label","components","alert2","focusDeck","timer","columns","getElementById","focusedColumn","focus","firstVisibleColumn","column","getBoundingClientRect","modals","modal","modalFocusElement","pages","page","useLocationChange","useLocation","currentLocationRef","pathname","FETCH_MAX_AGE","MAX_AGE","fetchLists","pmem","lists","title","updatedAt","now","maxAge","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","index","deleteListStore","listID","findIndex","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","onSubmit","preventDefault","FormData","listResult","replies_policy","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","LIMIT","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","currentID","familiarFollowers","memFetchFamiliarFollowers","fetchPostingStats","accountID","fetchStatuses","statuses","total","originals","replies","stats","boosts","memFetchPostingStats","fetchAccount","standalone","i18n2","currentMasto","currentInstance","isString","setInfo","sameCurrentInstance","info2","acct","avatar","bot","createdAt","displayName","emojis","fields","group","lastStatusAt","locked","note","statusesCount","username","memorial","moved","roles","hideCollections","header","headerStatic","headerIsAvatar","isSelf","infoHasEssentials","account2","updated","punycode","accountInstance","setHeaderCornerColors","followersIterator","toUnicode","domain","fetchFollowers","firstLoad","familiarFollowersCache","results","newValue","familiarFollowers2","familiar","followingIterator","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","hasPostingStats","followers","renderPostingStats","onRelationshipChange","onProfileUpdate","useCallback","newAccount","headerCornerColors","stopPropagation","onError","ctx","canvas","onLoad","pixelDimension","rgbColors","OffscreenCanvas","createElement","g","imageSmoothingEnabled","drawImage","colors","getImageData","dataLength","lightenRGB","color","AccountBlock","avatarSize","handleWithInstance","clipboard","enhanceContent","verifiedAt","__html","EmojiText","blankCopy","follower","followersCount","shortenNumber","fetchFollowing","followingCount","excludeRelationshipAttrs","hideTime","daysSinceLastPost","FAMILIAR_FOLLOWERS_LIMIT","relationshipUIState","setRelationshipUIState","setRelationship","sameInstance","following","showingReblogs","currentInfo","setCurrentInfo","notifying","followedBy","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","acctWithInstance","setIsSelf","q","fetchRelationships","relationships","relationship2","relationship","showAddRemoveLists","setShowAddRemoveLists","showPrivateNoteModal","setLists","updateAccount","showTranslatedBio","showEditProfile","setShowPrivateNoteModal","lists2","currentAuthenticated","onMenuChange","setShowTranslatedBio","handle","niceAccountURL","newRelationship","counter","duration","error","setShowEditProfile","Loader","loading","TranslatedBioSheet","EditProfileSheet","AddRemoveListsSheet","luminence","alpha","urlObj","host","state","getHTMLText","fieldsText","Math","path","listsContainingAccount2","reloadCount","showListAddEditModal","setShowListAddEditModal","setListsContainingAccount","listsContainingAccount","inList","accountIds","result","PrivateNoteSheet","initialNote","textareaRef","_b","e2","trim","setAccount","acc","source","fieldsAttributesRef","displayName2","note2","fieldsAttributesFields","field","fieldsAttributes","FieldsAttributesRow","hasValue","setHasValue","AccountHandleInfo","server","encodedAcct","dir","AccountSheet","propInstance","AccountInfo","lookup","skip_webfinger","v2","search","resolve","accountURL","URL","parse","hostname","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","filter","startsWith","getMany","getTime","hasDrafts","abrupt","draft","draftStatus","replyTo","updatedAtDate","replyToStatus","MiniDraft","spoilerText","mediaAttachments","hasPoll","hasMedia","firstImageMedia","image","file","objectURL","createObjectURL","hasPollOrMedia","EmbedModal","dangerouslySetInnerHTML","GenericAccounts","postID","isCurrentInstance","setAccounts","showMore","setShowMore","showGenericAccounts","heading","fetchAccounts","staticAccounts","showReactions","relationshipsMap","setRelationshipsMap","loadRelationships","loadAccounts","done","Array","isArray","theAccount","j","_types","newAccounts","reloadGenericAccounts","post","Status","showStats","InView","MediaAltModal","forceTranslate","setForceTranslate","differentLanguage","localeMatch","l","supportsTTS","speak","whiteSpace","textWrap","TranslationBlock","sourceLanguage","classToType","obj","unpack","keyOrder","k","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","multiplyMatrices","A","B","B_cols","product","row","col","labConstants","compand","linear","sign","xyz2rgb","z","MtxAdaptMa","MtxAdaptMaI","MtxXYZ2RGB","RefWhiteRGB","Xn","Yn","Zn","LAB_CONSTANTS","As","Bs","Cs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","oklab2rgb","L","rest","X","Y","Z","OKLab_to_XYZ","b_","OKLab","LMStoXYZ","OKLabtoLMS","LMSnl","gammaAdjustSRGB","companded","rgb2xyz","MtxRGB2XYZ","rgb2oklab","xyz","XYZ_to_OKLab","XYZ","XYZtoLMS","LMStoOKLab","LMS","sin","cos","lch2lab","h","oklch2rgb","sqrt","atan2","round","lab2lch","rgb2oklch","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","behavior","showControls","setShowControls","handleSwipe","addEventListener","removeEventListener","handleScroll","abs","passive","mediaOkColors","media","blurhash","averageColor","getBlurHashAverageColor","mediaAccentColors","okColor","light","dark","default","mediaAccentGradients","range","join","lightGradient","darkGradient","toastRef","hideToast","currentColor","$meta","metaColor","mediaColor","colorScheme","content","accentColor","description","showMediaAlt","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","ReportModal","split","rules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","Object","fromEntries","category","comment","forward","ruleIds","reports","accountId","statusIds","Fragment","rule","required","maxlength","rows","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","res","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","opacity","textTransform","imgURL","multiColumnUrl","shortcutsViewMode","Boolean","shortcut","excludedViewMode","includes","shortcutsArr","from","temp","shortcutIndex","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","setFollowedHashtags","form","formRef","switch","followedHashtags","autocorrect","autocapitalize","tag","shortcutsStr","compressToEncodedURIComponent","importShortcutStr","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","parsed","JSON","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","v","dt","s","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","writeText","share","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","reloadStatusPage","reply","edit","toast","prevLocation","showSettings","showAccounts","showAccount","destination","showDrafts","showMediaModal","contains","showShortcutsSettings","showEmbedModal","showReportModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","severed_relationships","moderation_warning","emoji_reaction","annual_report","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","3","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","year","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","report","annualReport","_ids","_accounts","_statuses","_groupKeys","sampleAccounts","notificationsCount","groupKey","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","toLocaleString","genericAccountsHeading","statusKey","diffCount","expandAccounts","_g","isOwnPost","isFiltered","filtered","type2","gKey","keyAccounts","keyAccount","_accounts2","status2","TruncatedLink","onContextMenu","dispatchEvent","clientX","clientY","useTruncated","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasAccount","hash","warn","id2","setShowNotificationSheet","tagName","instanceURL","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","select","blur","autocomplete","spellCheck","onSearch","onFocus","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","firstItem","prevItem","previousElementSibling","lastItem","click","queryType","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","isMultiColumnMode","shortcutsColumnsMode","menuRef","hasLists","formattedShortcuts","pin","handler","closeMenu","updatesButton","instanceRef","overflow","viewScroll","menuClassName","position","SubMenu2","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","slice","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","groupContext","contexts","contextIndex","t","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","aDate","bDate","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","skipThreading","ids","replyToStatuses","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","extractedTags","itemFollowedTags","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","direction","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","filterInfo","hasSpoiler","readingExpandMedia","mediaKey","toLowerCase","filterTitleStr","Media","showSpoilerMedia","NavMenu","showFollowing","bindLongPress","useLongPress","threshold","detect","cancelOnMovement","buttonRef","menuState","setMenuState","boundingBoxPadding","safeBoundingBoxPadding","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","squircle","ControlledMenu","anchorRef","containerProps","zIndex","portal","body","unmountOnClose","appVersion","commitHash","__COMMIT_HASH__","confirm","ListMenu","supportsLists","scrollIntoViewOptions","block","inline","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","debug","isMediaFirstInstance","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","itemsSelector","jRef","activeItem","activeItemRect","closest","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","handleLoadNewPosts","showNewPostsIndicator","dotRef","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","hasUpdate","lastHiddenTime","TimelineItem","skeleton","inView","fItems","filteredItemsIDs","aFiltered","bFiltered","isCarousel","unfiltered","filteredItems2","has","StatusCarousel","_pinned2","_grouped","item2","statusID3","_pinned3","actualStatusID3","reblog3","statusID2","actualStatusID2","reblog2","url2","showCompact","_differentAuthor","isSpoiler","manyItems","isMiddle","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","endButtonRef","render","setRender","newID","oldID","startButtonRef","statusPeekText","statusPeek","statusThreadNumber","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","postId","setFeaturedTags","acctDisplay","accountDisplay","featuredTags","monthYear","fetchAccountPromiseRef","useTitle","fetchPromise","cachedAccount","filterBarRef","TimelineStart","month2","date","validity","MonthPicker","active","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","monthFieldRef","yearFieldRef","checkValidity","minYear","minMonth","maxYear","maxMonth","AnnualReport","setResults","annualReports","report2","datePlaceholder","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","groups","FILTER_SORTS","FILTER_GROUPS","DTF","mem","Intl","DateTimeFormat","day","hour","minute","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","maxCreatedAtDate","allResults","mainloop","homeIterator","nextParams","createdAtDate","selfPost","addedResults","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","posts","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","trimmedCatchups","lastCatchups","restCatchups","endAt","startAt","reloadCatchupsCount","_followedTags","_e","thePost","__FILTER","links","sharers","links2","link","topLinks","shared","linksLoop","likes","filteredPosts","authors","authorCounts","selectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bAccountID","aIndex","bIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBar","postsBarType","posts2","postsBins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","escRef","handleArrowKeys","ignoreModifiers","activeElement","isRadio","isArrowKeys","setRange","niceDateTime","format","pc","yes","st","del","setSelectedFilterCategory","setSortBy","formatRange","setGroupBy","transform","imageDescription","publishedAt","labAverageColor","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","isFollowedTags","PostLine","isReplyTo","show","setShow","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","density","isThread","_thread","readingExpandSpoilers","showMedia","showPostContent","emojifyText","o","multiple","remoteMediaURL","_f","_h","_j","_i","mediaURL","MEDIA_SIZE","previewUrl","gifv","video","audio","PostStats","numBins","dates","minDate","normalized","binIndex","bins","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","keyword","ExpiryStatus","_id","incID","FiltersAddEdit","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","title2","keywordIDs","getAll","keywordKeywords","keywordWholeWords","wholeWord","removedKeywordIDs","keywordsAttributes","context2","expiresIn","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","latestItem","__BENCHMARK","latestItemChanged","clearFollowedTagsState","opts","payload","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","columnMode","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","valueContainsLatestItem","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","featuredTags2","setIsFeaturedTag","finally","featuredTagID","catch","MenuHeader","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","setDownOverflow","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","removed","setRemoved","notificationTypeKeys","GROUP_TYPES","groupable","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications","newGroupNotifications","gn","latestPageNotificationAt","mostRecentNotificationId","newGroupNotifications1","notificationsMap","virtualType","mappedNotification","ma","mappedAccount","newGroupNotifications2","notificationsMap2","hasOneAccount","toLocaleDateString","n","cleanNotifications","cleanNotifications2","emptySearchParams","URLSearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastoFetchNotifications","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","setAnnualReportNotification","annualReportNotification2","annualReportYear","getFullYear","statusLink","today","todaySubHeading","forceOpts","setShowNotificationsSettings","announcement","notificationsPolicy","open","onToggle","request","pendingRequestsCount","NotificationRequestModalButton","NotificationRequestButtons","annualReportNotification","notificationDay","differentDay","toDateString","subHeading","newPolicy","AnnouncementBlock","contact","contactAccount","startsAt","endsAt","published","allDay","reactions","publishedAtDate","read","publishedDateText","updatedAtText","reaction","me","fetchNotficationsByAccount","showModal","setShowModal","notifs","setNotifications","hasRequestState","Public","isLocal","publicIterator","fetchPublic","remote","prompt","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","typeResults","setTypeResultsFunc","loadResults","_c","_d","filterBarParent","history","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","supportsTrendingLinkPosts","currentLinkRef","hasCurrentLink","fetchLinkMentions","prevCurrentLink","authorUrl","authorName","providerName","providerUrl","isShortTitle","hasAuthor","flexShrink","textAlign","Columns","Hashtag","Component","$column","currentFocusedColumn","prevColKey","nextColKey","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","statusPostRegexes","getInstanceStatusObject","regex","match","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","instancesListURL","dec2hex","dec","toString","verifier","array","Uint32Array","crypto","getRandomValues","sha256","plain","TextEncoder","encode","subtle","digest","base64urlencode","bytes","len","byteLength","String","fromCharCode","btoa","generateCodeChallenge","hashed","supportsPKCE","ok","json","code_challenge_methods_supported","__generateCodeChallenge","DEV","PHANPY_CLIENT_NAME","CLIENT_NAME","SCOPES","sameSite","currentLocation","origin","REDIRECT_URI","registerApplication","registrationParams","client_name","redirect_uris","scopes","website","method","headers","getPKCEAuthorizationURL","registrationJSON","client_id","codeChallenge","code_challenge_method","code_challenge","authorizationParams","scope","authorizationURL","client_secret","code_verifier","redirect_uri","append","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","xmlDoc","parseFromString","template","vapid_key","authPKCE","sessionCookie","getAuthorizationURL","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaIndex","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","handleMediaClose","$carousel","$deckContainers","$deckContainer","StatusParent","linkable","restProps","createdAtSort","StatusThread","navigation","translate","setStatuses","heroStatusRef","totalDescendants","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","cachedStatuses","reallyCachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","level","nextLevel","descendantLevelsCount","expandReplies","_r","weight","descendants","ancestors2","ancestors","missingStatuses","ancestorsIsThread","nestedDescendants","__replies","heroAccountID","ancestor","threadifyStatus","offsetTop","heroLimit","setLimit","showRefresh","setShowRefresh","allStatuses","scrollPosition","initContext","interval","newScrollOffsets","contextURL","newScrollTop","statusWeightCache","heroContentText","apiCache","heroDisplayName","postInstance","hasDescendants","div","innerHTML","activeStatusRect","activeStatus","postSameInstance","nextStatus","allStatusLinks","activeStatusIndex","some","heroPointer","topmostStatusLink","heroInView","prevStatus","statusLinkRect","details","initialPageState","handleMediaClick","handleStatusLinkClick","descendant","isHero","requestAnimationFrame","setHeroInView","setReachTopPost","isLinkable","SubComments","enableTranslate","onStatusLinkClick","showActionsBar","prevLocationIsStatusPage","prevEntry","hasParentThread","openAll","getIDs","statusesList","renderStatus","spoilerButton","viewMode","moreStatusesKeys","onAnimationEnd","back","reachTopPost","arr","setViewMode","button","full","buttons","accWeight","parentLink","diveDeep","replies3","totalComments","sameCount","totalWeight","calcStatusWeight","openBefore","renderReplies","Container","isDetails","detailsRef","shortReply","open2","dataset","setRenderReplies","MEDIA_VIRTUAL_LENGTH","CARD_VIRTUAL_LENGTH","cachedWeight","mediaLength","pollLength","POLL_VIRTUAL_LENGTH","cardLength","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","Welcome","marginBlockEnd","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","setInterval","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","isIOS","tempColor","themeDarkColor","textSize","$app","BENCHES","setIsLoggedIn","decodeURIComponent","clientSecret","clientID","initStates","searchAccount","getAccount","client","hasPreferences","hasInstance","initPreferences","initInstance","PrimaryRoutes","Routes","Route","Root","nonRootLocation","getPrevLocation","SecondaryRoutes","backgroundLocation","isModalPage","initActivateLang","I18nProvider","HashRouter","App","localStorage","removeItem","sessionStorage","IGNORE_CACHE_KEYS","clearRanOnce","FAST_INTERVAL","SLOW_INTERVAL","clearCaches","cache","_keys","MAX_SW_CACHE_SIZE","deleteKeys"],"mappings":"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","x_google_ignoreList":[0,1,6,7,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39]}